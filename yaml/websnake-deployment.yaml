# description: 
# This file contains the Kubernetes deployment configuration for the WebSnake application.
# The deployment configuration includes the frontend, backend, and MongoDB components of the application.
# 
# TODO: Would it be smart to split the yaml file into multiple files for each component?


## Frontend
#--------------------------------------------------------------------------------------------------
apiVersion: v1                # API version for the service resource
kind: Service                 # Resource type

metadata:
  name: frontend              # Name of the service
  labels: 
    app: frontend             # Label for the service

spec:
  type: LoadBalancer          # Service type is LoadBalancer, which exposes the Service externally using a cloud provider's load balancer
  ports:
    - name: http              # Name of the port
      port: 3000              # Port that the Service will expose
      nodePort: 30001         # Node port to expose the Service on each node in the cluster
      protocol: TCP           # Protocol that should be used by the service
  selector:
    app: frontend             # Selector to match the Service with the frontend pods
---

apiVersion: apps/v1           # API version for the deployment resource
kind: Deployment              # Resource type

metadata:
  name: frontend              # Name of the deployment
  labels:
    app: frontend             # Label for the deployment

spec:
  replicas: 1                 # Number of pod replicas for the Deployment (horizontal scaling)
  selector:
    matchLabels:
      app: frontend           # Selector to match the Deployment with the frontend pods
  template:
    metadata:
      labels:
        app: frontend         # Label to identify the pods created by this Deployment
    spec:
      containers:
        - name: frontend                          # Name of the container
          image: jebe24/websnake-frontend:latest  # Image to use for the container
          ports:
            - containerPort: 3000                 # Port that the container listens on
---

## Backend
#--------------------------------------------------------------------------------------------------
apiVersion: v1                # API version for the service resource
kind: Service                 # Resource type

metadata:
  name: backend               # Name of the service
  labels:
    app: backend              # Label for the service

spec:
  type: LoadBalancer          # Service type is LoadBalancer, which exposes the Service externally using a cloud provider's load balancer
  ports:
    - port: 5000              # Port that the Service will expose
      targetPort: 5000        # Port that the Service will forward to
  selector:
    app: backend              # Selector to match the Service with the backend pods
---

apiVersion: apps/v1           # API version for the deployment resource
kind: Deployment              # Resource type

metadata:
  name: backend               # Name of the deployment
  labels:
    app: backend              # Label to identify the deployment

spec:
  replicas: 1                 # Number of pod replicas for the Deployment (horizontal scaling)
  selector:
    matchLabels:
      app: backend            # Selector to match the Deployment with the backend pods
  template:
    metadata:
      labels:
        app: backend          # Label to identify the pods created by this Deployment
    spec:
      containers:
        - name: backend                           # Name of the container
          image: jebe24/websnake-backend:latest   # Image to use for the container
          ports:
            - containerPort: 5000                 # Port that the container listens on
---

## MongoDB
#--------------------------------------------------------------------------------------------------
apiVersion: v1                # API version for the service resource
kind: Service                 # Resource type

metadata:
  name: mongodb               # Name of the service
  labels:
    app: mongodb              # Label for the service

spec:
  ports:
    - port: 27017               # Port that the Service will expose
      targetPort: 27017          # Correct target port for MongoDB
  selector:
    app: mongodb                # Selector to match the Service with the MongoDB pods
---

apiVersion: apps/v1             # API version for the StatefulSet resource
kind: StatefulSet               # Resource type

metadata:
  name: mongodb                 # Name of the StatefulSet
  labels:
    app: mongodb                # Label to identify the StatefulSet

spec:
  serviceName: mongodb          # Name of the service that the StatefulSet will use
  replicas: 1                   # Number of pod replicas for the StatefulSet
  selector:
    matchLabels:
      app: mongodb              # Selector to match the StatefulSet with the MongoDB pods
  template:
    metadata:
      labels:
        app: mongodb            # Label to identify the pods created by this StatefulSet
    spec:
      containers:
        - name: mongodb               # Name of the container
          image: mongo:latest         # Image to use for the container
          ports:
            - containerPort: 27017    # Port that the container listens on
              name: mongodb-port      # Name of the port
          volumeMounts:
            - name: score-data            # Name of the volume
              mountPath: /data/db         # Mount path for the volume
            - name: mongo-config          # Name of the volume
              mountPath: /data/configdb   # Mount path for the volume

  volumeClaimTemplates:
    - metadata:
        name: score-data                # Name of the persistent volume claim
      spec:
        accessModes: ["ReadWriteOnce"]  # Access mode for the persistent volume claim
        resources:
          requests: 
            storage: 10Mi               # Storage size for the persistent volume claim
    - metadata: 
        name: mongo-config              # Name of the persistent volume claim
      spec:
        accessModes: ["ReadWriteOnce"]  # Access mode for the persistent volume claim
        resources:
          requests: 
            storage: 5Mi                # Storage size for the persistent volume claim